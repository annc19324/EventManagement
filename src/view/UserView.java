/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import controller.AttendeeController;
import controller.EventController;
import controller.OrderController;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;
import model.Event;
import model.User;
import util.Session;
import util.showTableCell;

/**
 *
 * @author annc1
 */
public class UserView extends javax.swing.JFrame {

    private boolean isOpenMenu = false;
    private int mousePressX, mousePressY;
    private final User user;
    private EventController eventController;
    private EventManager eventManager;
    private int width = 270;

    /**
     * Creates new form UserView
     *
     * @throws java.sql.SQLException
     */
    public UserView() throws SQLException {
        initComponents();
        setLocationRelativeTo(null);
        txtSearch.setBorder(new EmptyBorder(0, 30, 0, 30));

        eventController = new EventController();
        eventManager = new EventManager();
        this.user = new User();
        lblUsername.setText("tài khoản: " + user.getFullname());
    }

    public UserView(User user) throws SQLException {
        initComponents();
        setLocationRelativeTo(null);
        txtSearch.setBorder(new EmptyBorder(0, 30, 0, 30));

        eventController = new EventController();
        eventManager = new EventManager();
        this.user = Session.getLoggedInUser();
        lblUsername.setText("Tài khoản: " + user.getFullname());
        String[] columnNames = {"Event ID", "Event Name", "Start Date", "End Date", "Location", "Description", "Status", "Price"};
        DefaultTableModel model = new DefaultTableModel(columnNames, 0);
        tblEventList.setModel(model);

        String[] registeredEventColumnNames = {"Event Name"};
        DefaultTableModel registeredEventModel = new DefaultTableModel(registeredEventColumnNames, 0);
        tblRegisteredEventName.setModel(registeredEventModel);

        showAllEvents();
        showRegisteredEvents();
        tblEventList.setRowHeight(40);
        tblRegisteredEventName.setRowHeight(40);
        tblRegisteredEventName.setDefaultEditor(Object.class, null);
        tblEventList.setDefaultEditor(Object.class, null);

        for (int i = 0; i < tblEventList.getColumnCount(); i++) {
            tblEventList.getColumnModel().getColumn(i).setCellRenderer(new showTableCell());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlMain = new javax.swing.JPanel();
        pnlHeader = new javax.swing.JPanel();
        lblUsername = new javax.swing.JLabel();
        lblMinimize5 = new javax.swing.JLabel();
        lblClose6 = new javax.swing.JLabel();
        lblMenu = new javax.swing.JLabel();
        pnlSlideMenu = new javax.swing.JPanel();
        pnlClose = new javax.swing.JPanel();
        lblClose = new javax.swing.JLabel();
        pnlPage = new javax.swing.JPanel();
        lblHome = new javax.swing.JLabel();
        lblAccount = new javax.swing.JLabel();
        lblJoinEvents = new javax.swing.JLabel();
        lblJoinnedEvents = new javax.swing.JLabel();
        pnlfooter = new javax.swing.JPanel();
        lblHelp = new javax.swing.JLabel();
        lblSetting = new javax.swing.JLabel();
        lblLogOut = new javax.swing.JLabel();
        pnlContainer = new javax.swing.JPanel();
        pnlEventList2 = new javax.swing.JPanel();
        pnlbtnFunc2 = new javax.swing.JPanel();
        btnRegisterEvent = new javax.swing.JButton();
        pnlCurrentEventList = new javax.swing.JPanel();
        txtSearch = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEventList = new javax.swing.JTable();
        lblEventList = new javax.swing.JLabel();
        pnlSearch_Refresh = new javax.swing.JPanel();
        lblRefresh = new javax.swing.JLabel();
        btnSearch = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        lblRegisteredEvent = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblRegisteredEventName = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        btnCheckDetail = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setSize(new java.awt.Dimension(1100, 550));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        pnlMain.setBackground(new java.awt.Color(51, 204, 255));
        pnlMain.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 5, true));
        pnlMain.setPreferredSize(new java.awt.Dimension(950, 450));

        pnlHeader.setBackground(new java.awt.Color(0, 153, 153));
        pnlHeader.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                pnlHeaderMouseDragged(evt);
            }
        });
        pnlHeader.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlHeaderMousePressed(evt);
            }
        });

        lblUsername.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblUsername.setForeground(new java.awt.Color(255, 255, 255));
        lblUsername.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        lblMinimize5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMinimize5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/bar.png"))); // NOI18N
        lblMinimize5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblMinimize5MouseClicked(evt);
            }
        });

        lblClose6.setForeground(new java.awt.Color(204, 0, 255));
        lblClose6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblClose6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/x.png"))); // NOI18N
        lblClose6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblClose6MouseClicked(evt);
            }
        });

        lblMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/menu.png"))); // NOI18N
        lblMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblMenuMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlHeaderLayout = new javax.swing.GroupLayout(pnlHeader);
        pnlHeader.setLayout(pnlHeaderLayout);
        pnlHeaderLayout.setHorizontalGroup(
            pnlHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblUsername, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblMinimize5, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(lblClose6, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnlHeaderLayout.setVerticalGroup(
            pnlHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHeaderLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(pnlHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lblMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(pnlHeaderLayout.createSequentialGroup()
                            .addGap(3, 3, 3)
                            .addGroup(pnlHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblClose6)
                                .addComponent(lblMinimize5)))))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pnlSlideMenu.setBackground(new java.awt.Color(51, 204, 255));
        pnlSlideMenu.setMinimumSize(new java.awt.Dimension(200, 0));

        pnlClose.setOpaque(false);

        lblClose.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/x.png"))); // NOI18N
        lblClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCloseMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlCloseLayout = new javax.swing.GroupLayout(pnlClose);
        pnlClose.setLayout(pnlCloseLayout);
        pnlCloseLayout.setHorizontalGroup(
            pnlCloseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblClose, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlCloseLayout.setVerticalGroup(
            pnlCloseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblClose, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
        );

        pnlPage.setOpaque(false);

        lblHome.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblHome.setText("Trang chủ");
        lblHome.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 30, 1, 30));
        lblHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblHomeMouseClicked(evt);
            }
        });

        lblAccount.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblAccount.setText("Tài khoản");
        lblAccount.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 30, 1, 30));
        lblAccount.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAccountMouseClicked(evt);
            }
        });

        lblJoinEvents.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblJoinEvents.setText("Tham gia sự kiện");
        lblJoinEvents.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 30, 1, 30));
        lblJoinEvents.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblJoinEventsMouseClicked(evt);
            }
        });

        lblJoinnedEvents.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblJoinnedEvents.setText("Sự kiện đã tham gia");
        lblJoinnedEvents.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 30, 1, 30));
        lblJoinnedEvents.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblJoinnedEventsMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlPageLayout = new javax.swing.GroupLayout(pnlPage);
        pnlPage.setLayout(pnlPageLayout);
        pnlPageLayout.setHorizontalGroup(
            pnlPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPageLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblHome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblAccount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblJoinEvents, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblJoinnedEvents, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlPageLayout.setVerticalGroup(
            pnlPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPageLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(lblHome)
                .addGap(18, 18, 18)
                .addComponent(lblAccount)
                .addGap(18, 18, 18)
                .addComponent(lblJoinEvents)
                .addGap(18, 18, 18)
                .addComponent(lblJoinnedEvents)
                .addContainerGap(104, Short.MAX_VALUE))
        );

        pnlfooter.setOpaque(false);

        lblHelp.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblHelp.setText("Trợ giúp");
        lblHelp.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 30, 1, 30));
        lblHelp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblHelpMouseClicked(evt);
            }
        });

        lblSetting.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblSetting.setText("Cài đặt");
        lblSetting.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 30, 1, 30));

        lblLogOut.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblLogOut.setText("Đăng xuất");
        lblLogOut.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 30, 1, 30));
        lblLogOut.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblLogOutMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlfooterLayout = new javax.swing.GroupLayout(pnlfooter);
        pnlfooter.setLayout(pnlfooterLayout);
        pnlfooterLayout.setHorizontalGroup(
            pnlfooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlfooterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlfooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblHelp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblSetting, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblLogOut, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlfooterLayout.setVerticalGroup(
            pnlfooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlfooterLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblHelp)
                .addGap(18, 18, 18)
                .addComponent(lblSetting)
                .addGap(18, 18, 18)
                .addComponent(lblLogOut)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlSlideMenuLayout = new javax.swing.GroupLayout(pnlSlideMenu);
        pnlSlideMenu.setLayout(pnlSlideMenuLayout);
        pnlSlideMenuLayout.setHorizontalGroup(
            pnlSlideMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSlideMenuLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(pnlSlideMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlClose, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlfooter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlPage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        pnlSlideMenuLayout.setVerticalGroup(
            pnlSlideMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSlideMenuLayout.createSequentialGroup()
                .addComponent(pnlClose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(pnlPage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnlfooter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pnlContainer.setOpaque(false);

        pnlEventList2.setOpaque(false);

        pnlbtnFunc2.setOpaque(false);

        btnRegisterEvent.setBackground(new java.awt.Color(102, 204, 255));
        btnRegisterEvent.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnRegisterEvent.setText("Đăng ký sự kiện");
        btnRegisterEvent.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnRegisterEvent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRegisterEventMouseClicked(evt);
            }
        });
        btnRegisterEvent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterEventActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlbtnFunc2Layout = new javax.swing.GroupLayout(pnlbtnFunc2);
        pnlbtnFunc2.setLayout(pnlbtnFunc2Layout);
        pnlbtnFunc2Layout.setHorizontalGroup(
            pnlbtnFunc2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlbtnFunc2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnRegisterEvent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlbtnFunc2Layout.setVerticalGroup(
            pnlbtnFunc2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlbtnFunc2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnRegisterEvent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlCurrentEventList.setOpaque(false);

        txtSearch.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        txtSearch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSearchFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSearchFocusLost(evt);
            }
        });
        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });

        tblEventList.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblEventList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tblEventList);

        lblEventList.setFont(new java.awt.Font("Segoe UI", 1, 30)); // NOI18N
        lblEventList.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEventList.setText("Danh sách sự kiện hiện tại");

        pnlSearch_Refresh.setOpaque(false);

        lblRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icons8-refresh-35.png"))); // NOI18N
        lblRefresh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblRefreshMouseClicked(evt);
            }
        });

        btnSearch.setBackground(new java.awt.Color(102, 204, 255));
        btnSearch.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnSearch.setText("Tìm kiếm");
        btnSearch.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSearchMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlSearch_RefreshLayout = new javax.swing.GroupLayout(pnlSearch_Refresh);
        pnlSearch_Refresh.setLayout(pnlSearch_RefreshLayout);
        pnlSearch_RefreshLayout.setHorizontalGroup(
            pnlSearch_RefreshLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSearch_RefreshLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSearch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnlSearch_RefreshLayout.setVerticalGroup(
            pnlSearch_RefreshLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblRefresh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout pnlCurrentEventListLayout = new javax.swing.GroupLayout(pnlCurrentEventList);
        pnlCurrentEventList.setLayout(pnlCurrentEventListLayout);
        pnlCurrentEventListLayout.setHorizontalGroup(
            pnlCurrentEventListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblEventList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlCurrentEventListLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCurrentEventListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 810, Short.MAX_VALUE)
                    .addGroup(pnlCurrentEventListLayout.createSequentialGroup()
                        .addComponent(txtSearch)
                        .addGap(18, 18, 18)
                        .addComponent(pnlSearch_Refresh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlCurrentEventListLayout.setVerticalGroup(
            pnlCurrentEventListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCurrentEventListLayout.createSequentialGroup()
                .addComponent(lblEventList, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlCurrentEventListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlSearch_Refresh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(5, 5, 5))
        );

        javax.swing.GroupLayout pnlEventList2Layout = new javax.swing.GroupLayout(pnlEventList2);
        pnlEventList2.setLayout(pnlEventList2Layout);
        pnlEventList2Layout.setHorizontalGroup(
            pnlEventList2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlEventList2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlEventList2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnlbtnFunc2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlCurrentEventList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlEventList2Layout.setVerticalGroup(
            pnlEventList2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEventList2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlCurrentEventList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlbtnFunc2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel2.setOpaque(false);

        lblRegisteredEvent.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblRegisteredEvent.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblRegisteredEvent.setText("Sự kiện đã đăng ký");

        tblRegisteredEventName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblRegisteredEventName.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tblRegisteredEventName);

        jPanel3.setOpaque(false);

        btnCheckDetail.setBackground(new java.awt.Color(102, 204, 255));
        btnCheckDetail.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnCheckDetail.setText("Xem chi tiết");
        btnCheckDetail.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnCheckDetail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCheckDetailMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnCheckDetail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnCheckDetail)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblRegisteredEvent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblRegisteredEvent)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout pnlContainerLayout = new javax.swing.GroupLayout(pnlContainer);
        pnlContainer.setLayout(pnlContainerLayout);
        pnlContainerLayout.setHorizontalGroup(
            pnlContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlContainerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlEventList2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlContainerLayout.setVerticalGroup(
            pnlContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlContainerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlEventList2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlMainLayout = new javax.swing.GroupLayout(pnlMain);
        pnlMain.setLayout(pnlMainLayout);
        pnlMainLayout.setHorizontalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addComponent(pnlSlideMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        pnlMainLayout.setVerticalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addComponent(pnlHeader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(pnlContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(pnlSlideMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMain, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1150, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMain, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 568, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void lblMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblMenuMouseClicked
        openMenu();
    }//GEN-LAST:event_lblMenuMouseClicked

    private void lblCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCloseMouseClicked
        closeMenu();
    }//GEN-LAST:event_lblCloseMouseClicked

    private void lblLogOutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblLogOutMouseClicked
        if ((JOptionPane.showConfirmDialog(this, "bạn có chắc chắn muốn đăng xuất khỏi tài khoản này không?", "xác nhận đăng xuất", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE)) == JOptionPane.YES_OPTION) {
            this.dispose();
            try {
                new LogInView().setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(UserView.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_lblLogOutMouseClicked

    private void lblMinimize5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblMinimize5MouseClicked
        setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_lblMinimize5MouseClicked

    private void lblClose6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblClose6MouseClicked
        if ((JOptionPane.showConfirmDialog(this, "bạn có chắc chắn muốn thoát không?", "xác nhận thoát", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE)) == (JOptionPane.OK_OPTION)) {
            System.exit(0);
        }
    }//GEN-LAST:event_lblClose6MouseClicked

    private void pnlHeaderMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlHeaderMouseDragged
        int ox = evt.getXOnScreen();
        int oy = evt.getYOnScreen();
        setLocation(ox - mousePressX, oy - mousePressY);
    }//GEN-LAST:event_pnlHeaderMouseDragged

    private void pnlHeaderMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlHeaderMousePressed
        mousePressX = evt.getX();
        mousePressY = evt.getY();
    }//GEN-LAST:event_pnlHeaderMousePressed

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        btnSearchMouseClicked(null);
    }//GEN-LAST:event_txtSearchActionPerformed

    private void lblRefreshMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblRefreshMouseClicked
        if (!Session.isLoggedIn()) {
            if ((JOptionPane.showConfirmDialog(this, "bạn cần đăng nhập trước, hãy nhấn 'OK' để đăng nhập!", "thông báo", JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE)) == (JOptionPane.OK_OPTION)) {
                try {
                    new LogInView().setVisible(true);
                    this.dispose();
                    return;
                } catch (SQLException ex) {
                    Logger.getLogger(UserView.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                return;
            }
        }
        try {
            showAllEvents();
        } catch (SQLException ex) {
            Logger.getLogger(UserView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_lblRefreshMouseClicked

    private void btnRegisterEventMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRegisterEventMouseClicked
        if (!Session.isLoggedIn()) {
            if ((JOptionPane.showConfirmDialog(this, "bạn cần đăng nhập trước, hãy nhấn 'OK' để đăng nhập!", "thông báo", JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE)) == (JOptionPane.OK_OPTION)) {
                try {
                    new LogInView().setVisible(true);
                    this.dispose();
                    return;
                } catch (SQLException ex) {
                    java.util.logging.Logger.getLogger(UserView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                }
            } else {
                return;
            }
        }
        int selectedRow = tblEventList.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "chọn ít nhất 1 sự kiện muốn tham gia để đăng ký!");
            return;
        }
        //lay thong tin dong dc chon
        String eventId = tblEventList.getValueAt(selectedRow, 0).toString();
        String eventName = tblEventList.getValueAt(selectedRow, 1).toString();
        String startDate = tblEventList.getValueAt(selectedRow, 2).toString();
        String endDate = tblEventList.getValueAt(selectedRow, 3).toString();
        String location = tblEventList.getValueAt(selectedRow, 4).toString();
        String description = tblEventList.getValueAt(selectedRow, 5).toString();
        String status = tblEventList.getValueAt(selectedRow, 6).toString();
        String price = tblEventList.getValueAt(selectedRow, 7).toString();

        boolean isRegistered = eventController.registerEvent(Session.getLoggedInUser().getUserId(), Session.getLoggedInUser().getFullname(), eventId, eventName);
        if (isRegistered) {
            JOptionPane.showMessageDialog(this, "đăng ký sự kiện thành công!");

            DefaultTableModel nameModel = (DefaultTableModel) tblRegisteredEventName.getModel();
            nameModel.addRow(new Object[]{eventName});

            Event eventDetail = new Event(eventId, eventName, startDate, endDate, location, description, status, Double.parseDouble(price));
            Session.addRegisteredEvent(eventDetail);
        } else {
            JOptionPane.showMessageDialog(this, "sự kiện này đã được đăng ký!");
        }
    }//GEN-LAST:event_btnRegisterEventMouseClicked

    private void btnCheckDetailMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCheckDetailMouseClicked
        if (!Session.isLoggedIn()) {
            if ((JOptionPane.showConfirmDialog(this, "bạn cần đăng nhập trước, hãy nhấn 'OK' để đăng nhập!", "thông báo", JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE)) == (JOptionPane.OK_OPTION)) {
                try {
                    new LogInView().setVisible(true);
                    this.dispose();
                } catch (SQLException ex) {
                    Logger.getLogger(UserView.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } else {
            try {
                new RegisteredEventView(Session.getLoggedInUser()).setVisible(true);
                this.dispose();
            } catch (SQLException ex) {
                Logger.getLogger(UserView.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnCheckDetailMouseClicked

    private void lblHomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblHomeMouseClicked
        if (!Session.isLoggedIn()) {
            if ((JOptionPane.showConfirmDialog(this, "bạn cần đăng nhập trước, hãy nhấn 'OK' để đăng nhập!", "thông báo", JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE)) == (JOptionPane.OK_OPTION)) {
                try {
                    new LogInView().setVisible(true);
                    this.dispose();
                    return;
                } catch (SQLException ex) {
                    java.util.logging.Logger.getLogger(UserView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                }
            } else {
                return;
            }
        }
        try {
            new UserView(Session.getLoggedInUser()).setVisible(true);
            showRegisteredEvents();

            this.dispose();
        } catch (SQLException ex) {
            Logger.getLogger(UserView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_lblHomeMouseClicked

    private void txtSearchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSearchFocusGained
        if (txtSearch.getText().equals("nhập mã sự kiện hoặc tên sự kiện cần tìm ở đây")) {
            txtSearch.setText("");
            txtSearch.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_txtSearchFocusGained

    private void txtSearchFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSearchFocusLost
        if (txtSearch.getText().isEmpty()) {
            txtSearch.setForeground(Color.GRAY);
            txtSearch.setText("nhập mã sự kiện hoặc tên sự kiện cần tìm ở đây");
        }
    }//GEN-LAST:event_txtSearchFocusLost

    private void btnSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSearchMouseClicked
        String key = txtSearch.getText().trim().toLowerCase();
        if (!Session.isLoggedIn()) {
            if ((JOptionPane.showConfirmDialog(this, "bạn cần đăng nhập trước, hãy nhấn 'OK' để đăng nhập!", "thông báo", JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE)) == (JOptionPane.OK_OPTION)) {
                try {
                    new LogInView().setVisible(true);
                    this.dispose();
                    return;
                } catch (SQLException ex) {
                    Logger.getLogger(UserView.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                return;
            }
        }

        if (key.equals("") || key.equals("nhập mã sự kiện hoặc tên sự kiện cần tìm ở đây")) {
            JOptionPane.showMessageDialog(this, "hãy nhập mã sự kiện hoặc tên sự kiện cần tìm!", "thông báo", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tblEventList.getModel();
        model.setRowCount(0);

        try {
            List<Event> eventList = eventController.getAllEvent();
            boolean found = false;

            for (Event event : eventList) {
                if (event.getEventName().toLowerCase().contains(key) || event.getEventId().toLowerCase().contains(key)) {
                    model.addRow(new Object[]{
                        event.getEventId(),
                        event.getEventName(),
                        event.getStartDate(),
                        event.getEndDate(),
                        event.getLocation(),
                        event.getDescription(),
                        event.getStatus(),
                        event.getPrice(),});
                    found = true;
                    Session.addRegisteredEvent(event);
                    txtSearch.setText("");
                }
            }
            if (!found) {
                JOptionPane.showMessageDialog(this, "không tìm thấy thông tin về '" + key + "'");
                txtSearch.requestFocus();
            }
        } catch (SQLException ex) {
            Logger.getLogger(UserView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSearchMouseClicked

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        if (isOpenMenu) {
            closeMenu();
        }
    }//GEN-LAST:event_formMouseClicked

    private void lblHelpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblHelpMouseClicked
        new HelpView(Session.getLoggedInUser()).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_lblHelpMouseClicked

    private void lblJoinEventsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblJoinEventsMouseClicked
        try {
            new UserView(Session.getLoggedInUser()).setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(UserView.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.dispose();
    }//GEN-LAST:event_lblJoinEventsMouseClicked

    private void lblJoinnedEventsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblJoinnedEventsMouseClicked
        try {
            new RegisteredEventView(Session.getLoggedInUser()).setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(UserView.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.dispose();
    }//GEN-LAST:event_lblJoinnedEventsMouseClicked

    private void lblAccountMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAccountMouseClicked
        try {
            new AccountView(Session.getLoggedInUser()).setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(UserView.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.dispose();
    }//GEN-LAST:event_lblAccountMouseClicked
    private String getSelectedEventId() {
        // Kiểm tra xem có hàng nào được chọn không
        int selectedRow = tblEventList.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một sự kiện!");
            return null; // Trả về null nếu không có hàng nào được chọn
        }

        // Lấy EventId từ cột tương ứng (giả sử cột 0 là EventId)
        DefaultTableModel tableModel = (DefaultTableModel) tblEventList.getModel();
        return tableModel.getValueAt(selectedRow, 0).toString(); // Trả về EventId dưới dạng String
    }

    private void btnRegisterEventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterEventActionPerformed
        // TODO add your handling code here:
        User loggedInUser = Session.getLoggedInUser();
        if (loggedInUser == null) {
            JOptionPane.showMessageDialog(this, "Vui lòng đăng nhập trước khi đăng ký sự kiện.");
            return;
        }

        // Lấy UserId từ Session
        int userId = loggedInUser.getUserId();

        // Lấy EventId từ bảng sự kiện
        String eventId = getSelectedEventId();
        if (eventId == null) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một sự kiện.");
            return;
        }
        // Thêm thông tin vào bảng Attendees
        AttendeeController attendeeController = new AttendeeController();
        boolean isAttendeeAdded = attendeeController.addAttendee(userId, eventId);

        if (!isAttendeeAdded) {
            JOptionPane.showMessageDialog(this, "Đăng ký thất bại! Không thể thêm vào danh sách tham gia.");
            return;
        }

        // Thêm thông tin vào bảng Orders
        OrderController orderController = new OrderController();
        boolean isOrderAdded = orderController.addOrderForAttendee(userId, eventId);

        if (isOrderAdded) {
            JOptionPane.showMessageDialog(this, "Đăng ký và tạo đơn hàng thành công!");
        } else {
            JOptionPane.showMessageDialog(this, "Không thể tạo đơn hàng. Vui lòng thử lại.");
        }
    }//GEN-LAST:event_btnRegisterEventActionPerformed

    public void openMenu() {
        isOpenMenu = true;
        new Thread(new Runnable() {
            @Override
            public void run() {
                int height = pnlSlideMenu.getHeight();
                for (int i = 0; i < width; i += 10) {
                    pnlSlideMenu.setSize(i, height);
                    pnlContainer.setBounds(i, pnlContainer.getY(), pnlMain.getWidth() - i, pnlContainer.getHeight());
                    try {
                        Thread.sleep(2);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(UserView.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }

        }).start();
    }

    public void closeMenu() {
        isOpenMenu = false;
        new Thread(new Runnable() {
            @Override
            public void run() {
                int height = pnlSlideMenu.getHeight();

                for (int i = width; i >= 0; i -= 10) {
                    pnlSlideMenu.setSize(i, height);
                    pnlContainer.setBounds(i, pnlContainer.getY(), pnlMain.getWidth() - i, pnlContainer.getHeight());
                    try {
                        Thread.sleep(2);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(UserView.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }

        }).start();
    }

    // hien thi bang
    public void showAllEvents() throws SQLException {
        //lay ds su kien trong controller
        List<Event> eList = eventController.getAllEvent();
        DefaultTableModel model = (DefaultTableModel) tblEventList.getModel();
        //reset hang
        model.setRowCount(0);
        Timer timer = new Timer(100, new ActionListener() {
            private int index = 0;

            @Override
            public void actionPerformed(ActionEvent e) {
                if (index < eList.size()) {
                    Event event = eList.get(index);
                    Object[] rowData = {
                        event.getEventId(),
                        event.getEventName(),
                        event.getStartDate(),
                        event.getEndDate(),
                        event.getLocation(),
                        event.getDescription(),
                        event.getStatus(),
                        event.getPrice()
                    };
                    model.addRow(rowData);
                    index++;
                } else {
                    ((Timer) e.getSource()).stop();
                }
            }
        });
        // Bắt đầu Timer
        timer.start();
    }

    private void showRegisteredEvents() {
        DefaultTableModel registeredModel = (DefaultTableModel) tblRegisteredEventName.getModel();
        registeredModel.setRowCount(0); // Xóa dữ liệu cũ
        List<Event> UpdateEventName = Session.getRegisteredEvents();
        if (UpdateEventName != null && !UpdateEventName.isEmpty()) {
            for (Event event : UpdateEventName) {
                registeredModel.addRow(new Object[]{
                    event.getEventName(),});
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                new UserView().setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(UserView.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCheckDetail;
    private javax.swing.JButton btnRegisterEvent;
    private javax.swing.JButton btnSearch;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblAccount;
    private javax.swing.JLabel lblClose;
    private javax.swing.JLabel lblClose6;
    private javax.swing.JLabel lblEventList;
    private javax.swing.JLabel lblHelp;
    private javax.swing.JLabel lblHome;
    private javax.swing.JLabel lblJoinEvents;
    private javax.swing.JLabel lblJoinnedEvents;
    private javax.swing.JLabel lblLogOut;
    private javax.swing.JLabel lblMenu;
    private javax.swing.JLabel lblMinimize5;
    private javax.swing.JLabel lblRefresh;
    private javax.swing.JLabel lblRegisteredEvent;
    private javax.swing.JLabel lblSetting;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JPanel pnlClose;
    private javax.swing.JPanel pnlContainer;
    private javax.swing.JPanel pnlCurrentEventList;
    private javax.swing.JPanel pnlEventList2;
    private javax.swing.JPanel pnlHeader;
    private javax.swing.JPanel pnlMain;
    private javax.swing.JPanel pnlPage;
    private javax.swing.JPanel pnlSearch_Refresh;
    private javax.swing.JPanel pnlSlideMenu;
    private javax.swing.JPanel pnlbtnFunc2;
    private javax.swing.JPanel pnlfooter;
    private javax.swing.JTable tblEventList;
    private javax.swing.JTable tblRegisteredEventName;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables

}
